#!/bin/bash

source $MESA_TOOLING_PATH/mesa_env

export MESA_VK_IGNORE_CONFORMANCE_WARNING=true
export MESA_SHADER_CACHE_DISABLE=true

# Enforce zsh (vscodium seems to have SHELL set to bash for some reasons, let's bypass that for devenv needs)
export SHELL=/bin/zsh

if [ "$#" -le 0 ]; then
    echo "usage: <driver> [build_dir_name]"
    exit 1
fi

driver=$1
build_dir_name=$2

if [ -z "$build_dir_name" ]; then
    build_dir_name=$driver
fi

RUSTICL_BUILD_ARGS="-Dgallium-rusticl=true -Dllvm=enabled -Drust_std=2021"

case $driver in
    asahi|asahi+debugoptimized|asahi+release)
        gallium_drivers_arg="asahi"
        vulkan_drivers_arg=""
        tools_args="nir,asahi,drm-shim"
        extra_meson_args=""
        ;;

    asahi+vk|asahi+vk+debugoptimized|asahi+vk+release)
        export HK_I_LIKE_ROTTEN_APPLES=1
        gallium_drivers_arg="asahi,zink"
        vulkan_drivers_arg="asahi"
        tools_args="nir,asahi,drm-shim"
        extra_meson_args=""
        ;;

    nouveau|nouveau+debugoptimized|nouveau+release)
        gallium_drivers_arg="nouveau"
        vulkan_drivers_arg=""
        tools_args="nir,nouveau,drm-shim"
        extra_meson_args=""
        ;;

    nouveau+ngl|nouveau+ngl+debugoptimized|nouveau+ngl+release)
        gallium_drivers_arg="ngl"
        vulkan_drivers_arg=""
        tools_args="nir,nouveau,drm-shim"
        extra_meson_args=""
        ;;

    nouveau+vk|nouveau+vk+debugoptimized|nouveau+vk+release)
        export NVK_I_WANT_A_BROKEN_VULKAN_DRIVER=1
        export NV50_PROG_DEBUG=1
        export NAK_DEBUG=print

        gallium_drivers_arg="nouveau,zink"
        vulkan_drivers_arg="nouveau"
        tools_args="nir,nouveau,drm-shim"
        extra_meson_args=""
        ;;

    nouveau+vk+old)
        export NVK_I_WANT_A_BROKEN_VULKAN_DRIVER=1
        export NV50_PROG_DEBUG=1
        export NAK_DEBUG=print

        gallium_drivers_arg="nouveau,zink"
        vulkan_drivers_arg="nouveau-experimental"
        tools_args="nir,nouveau,drm-shim"
        extra_meson_args=""
        ;;

    panfrost|panfrost+debugoptimized|panfrost+release)
        gallium_drivers_arg="panfrost"
        vulkan_drivers_arg=""
        tools_args="nir,panfrost,drm-shim"
        extra_meson_args=""
        ;;

    panfrost+rusticl|panfrost+rusticl+debugoptimized|panfrost+rusticl+release)
        export RUSTICL_ENABLE="panfrost"
        gallium_drivers_arg="panfrost"
        vulkan_drivers_arg=""
        tools_args="nir,panfrost,drm-shim"
        extra_meson_args="$RUSTICL_BUILD_ARGS"
        ;;

    panfrost+vk|panfrost+vk+debugoptimized|panfrost+vk+release)
        export PAN_I_WANT_A_BROKEN_VULKAN_DRIVER=1
        export PANVK_DEBUG=no_known_warn

        gallium_drivers_arg="panfrost,zink"
        vulkan_drivers_arg="panfrost"
        tools_args="nir,panfrost,drm-shim"
        extra_meson_args=""
        ;;

    freedreno|freedreno+debugoptimized|freedreno+release)
        gallium_drivers_arg="freedreno,zink"
        vulkan_drivers_arg=""
        tools_args="nir,freedreno,drm-shim"
        extra_meson_args=""
        ;;

    freedreno+vk|freedreno+vk+debugoptimized|freedreno+vk+release)
        gallium_drivers_arg="freedreno,zink"
        vulkan_drivers_arg="freedreno"
        tools_args="nir,freedreno,drm-shim"
        extra_meson_args=""
        ;;

    amd+rusticl|amd+rusticl+debugoptimized|amd+rusticl+release)
        export RUSTICL_ENABLE="radeonsi"
        gallium_drivers_arg="radeonsi"
        vulkan_drivers_arg=""
        tools_args="nir,drm-shim"
        extra_meson_args="$RUSTICL_BUILD_ARGS"
        ;;

    amd+vk|amd+vk+debugoptimized|amd+vk+release)
        export CC=clang
        export CXX=clang++
        gallium_drivers_arg="radeonsi,zink"
        vulkan_drivers_arg="amd"
        tools_args="nir,drm-shim"
        extra_meson_args=""
        ;;

    intel+vk|intel+vk+debugoptimized|intel+vk+release)
        gallium_drivers_arg="i915,zink"
        vulkan_drivers_arg="intel"
        tools_args="nir,drm-shim"
        extra_meson_args=""
        ;;

    virgl|virgl+debugoptimized|virgl+release)
        gallium_drivers_arg="radeonsi,i915,iris,swrast,virgl,zink"
        vulkan_drivers_arg="amd,intel,virtio,swrast"
        tools_args="nir"
        extra_meson_args="-Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;

    zink|zink+debugoptimized|zink+release)
        gallium_drivers_arg="zink"
        vulkan_drivers_arg=""
        tools_args="nir"
        extra_meson_args="-Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;

    virtio+vk|virtio+vk+debugoptimized|virtio+vk+release)
        gallium_drivers_arg=""
        vulkan_drivers_arg="virtio"
        tools_args="nir"
        extra_meson_args="-Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;

    vulkan-layers)
        gallium_drivers_arg=""
        vulkan_drivers_arg=""
        tools_args=""
        extra_meson_args="-Dllvm=disabled -Dgles1=disabled -Dgles2=disabled -Dshared-glapi=disabled -Dopengl=false -Degl=disabled -Dglx=disabled -Dvulkan-layers=overlay,nv-shader-dump"
        ;;

    vk+all|vk+all+debugoptimized)
        export HK_I_LIKE_ROTTEN_APPLES=1
        export PVR_I_WANT_A_BROKEN_VULKAN_DRIVER=1
        export NVK_I_WANT_A_BROKEN_VULKAN_DRIVER=1
        export PAN_I_WANT_A_BROKEN_VULKAN_DRIVER=1

        gallium_drivers_arg="auto"
        vulkan_drivers_arg="auto"
        tools_args="nir"
        extra_meson_args="$RUSTICL_BUILD_ARGS"
        ;;

    *)
        echo "Unknown driver: $driver"
        exit 1
        ;;
esac

if [[ $driver == *"release"* ]]; then
    extra_meson_args="${extra_meson_args} -Dbuildtype=release"
elif [[ $driver == *"debugoptimized"* ]]; then
    extra_meson_args="${extra_meson_args} -Dbuildtype=debugoptimized"
else
    extra_meson_args="${extra_meson_args} -Dbuildtype=debug -Dbuild-tests=true"
fi

# Enforce vulkan layer for device-select
if [[ $driver == *"vk"* ]]; then
    extra_meson_args="${extra_meson_args} -Dvulkan-layers=device-select"
fi


if [[ $driver == *"all"* ]]; then
    driver_basename="mesa"
elif [[ $driver == *"asahi"* ]]; then
    driver_basename="asahi"
elif [[ $driver == *"amd"* ]]; then
    driver_basename="amd"
elif [[ $driver == *"freedreno"* ]]; then
    driver_basename="freedreno"
elif [[ $driver == *"intel"* ]]; then
    driver_basename="intel"
elif [[ $driver == *"nouveau"* ]]; then
    driver_basename="nouveau"
elif [[ $driver == *"panfrost"* ]]; then
    driver_basename="panfrost"
elif [[ $driver == *"virgl"* ]]; then
    driver_basename="virgl"
elif [[ $driver == *"virtio"* ]]; then
    driver_basename="virtio"
elif [[ $driver == *"vulkan-layers"* ]]; then
    driver_basename="vulkan-layers"
elif [[ $driver == *"zink"* ]]; then
    driver_basename="zink"
fi

if [[ -z $driver_basename ]]; then
    echo "WARN: Unknown basename for prefix for $driver, no prefix specified!"
else
    export ALT_LOCAL=/opt/local/$driver_basename
    export PKG_CONFIG_PATH=$ALT_LOCAL/lib/pkgconfig
    extra_meson_args="${extra_meson_args} --prefix=$ALT_LOCAL"
fi

export MESA_BUILD_DIR=$MESA_BUILD_BASE_DIR/$build_dir_name

meson_args="-Dgallium-drivers=$gallium_drivers_arg -Dvulkan-drivers=$vulkan_drivers_arg -Dtools=$tools_args $extra_meson_args"

mkdir -p $MESA_BUILD_DIR

pushd $MESA_BUILD_DIR > /dev/null
meson setup $meson_args $MESA_ROOT_DIR

if [ $? -ne 0 ]; then
    meson setup --reconfigure $meson_args $MESA_ROOT_DIR

    if [ $? -ne 0 ]; then
        exit 1
    fi
fi
popd > /dev/null

export DEQP_JOBS=$(nproc)

echo $MESA_BUILD_DIR
meson devenv -C $MESA_BUILD_DIR
