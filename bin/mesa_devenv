#!/bin/bash

export MESA_BUILD_BASE_DIR=$HOME/build/mesa
export MESA_ROOT_DIR=$HOME/dev/mesa
export VK_GL_CTS_ROOT_DIR=$HOME/dev/VK-GL-CTS
export VK_GL_CTS_BUILD_DIR=$VK_GL_CTS_ROOT_DIR/build
export VULKAN_CTS_PATH=$VK_GL_CTS_ROOT_DIR/external/vulkancts
export OPENGL_CTS_PATH=$VK_GL_CTS_ROOT_DIR/external/openglcts
export MESA_VK_IGNORE_CONFORMANCE_WARNING=true
export MESA_SHADER_CACHE_DISABLE=true

if [ "$#" -le 0 ]; then
    echo "usage: <driver> [build_dir_name]"
    exit 1
fi

driver=$1
build_dir_name=$2

if [ -z "$build_dir_name" ]; then
    build_dir_name=$driver
fi

case $driver in
    asahi)
        export CC=clang
        export CXX=clang++
        gallium_drivers_arg="asahi"
        vulkan_drivers_arg=""
        tools_args="nir,asahi,drm-shim"
        extra_meson_args=""
        ;;
    asahi+vk)
        gallium_drivers_arg="asahi"
        vulkan_drivers_arg="asahi-experimental"
        tools_args="nir,asahi,drm-shim"
        extra_meson_args="-Dllvm=disabled"
        ;;
    asahi+dvk)
        export CC=clang
        export CXX=clang++
        gallium_drivers_arg="asahi"
        vulkan_drivers_arg="asahi-experimental"
        tools_args="nir,asahi"
        extra_meson_args="-Dbuildtype=debug"
        ;;
    nouveau)
        gallium_drivers_arg="nouveau"
        vulkan_drivers_arg=""
        tools_args="nir,nouveau"
        extra_meson_args="-Dbuild-tests=true"
        ;;
    nouveau+vk)
        export NVK_I_WANT_A_BROKEN_VULKAN_DRIVER=1
        export NV50_PROG_DEBUG=1
        export NAK_DEBUG=print

        gallium_drivers_arg="nouveau"
        vulkan_drivers_arg="nouveau-experimental"
        tools_args="nir,nouveau"
        extra_meson_args="-Dbuildtype=debug"
        ;;
    nouveau+vk+release)
        export NVK_I_WANT_A_BROKEN_VULKAN_DRIVER=1

        gallium_drivers_arg="nouveau"
        vulkan_drivers_arg="nouveau-experimental"
        tools_args="nir,nouveau"
        extra_meson_args="-Dbuildtype=release"
        ;;
    nouveau+tegra)
        export ALT_LOCAL=/opt/local/tegra
        export PKG_CONFIG_PATH=$ALT_LOCAL/lib/pkgconfig

        gallium_drivers_arg="nouveau"
        vulkan_drivers_arg="nouveau-experimental"
        tools_args="nir,nouveau"
        extra_meson_args="--prefix=$ALT_LOCAL -Dbuildtype=debug -Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;
    amd+vk)
        export CC=clang
        export CXX=clang++
        gallium_drivers_arg="radeonsi,zink"
        vulkan_drivers_arg="amd"
        tools_args="nir"
        extra_meson_args="-Dllvm=disabled -Dbuildtype=debug"
        ;;
    intel+vk)
        gallium_drivers_arg="i915,zink"
        vulkan_drivers_arg="intel"
        tools_args="nir"
        extra_meson_args="-Dbuildtype=debug"
        ;;
    virgl)
        export ALT_LOCAL=/opt/local/virgl
        export PKG_CONFIG_PATH=$ALT_LOCAL/lib/pkgconfig

        gallium_drivers_arg="radeonsi,i915,iris,swrast,virgl,zink"
        vulkan_drivers_arg="amd,intel,virtio,swrast"
        tools_args="nir"
        extra_meson_args="--prefix=$ALT_LOCAL -Dbuildtype=debug -Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;

    zink)
        gallium_drivers_arg="zink"
        vulkan_drivers_arg=""
        tools_args="nir"
        extra_meson_args="-Dbuildtype=debug -Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;

    virtio+vk)
        gallium_drivers_arg=""
        vulkan_drivers_arg="virtio"
        tools_args="nir"
        extra_meson_args="-Dbuildtype=debug -Dgles1=enabled -Dgles2=enabled -Dplatforms=x11,wayland"
        ;;
    vulkan-layers)
        gallium_drivers_arg=""
        vulkan_drivers_arg=""
        tools_args=""
        extra_meson_args="-Dllvm=disabled -Dgles1=disabled -Dgles2=disabled -Dshared-glapi=disabled -Dopengl=false -Degl=disabled -Dglx=disabled -Dvulkan-layers=overlay,nv-shader-dump -Dbuildtype=debug"
        ;;
    *)
        echo "Unknown driver: $driver"
        exit 1
        ;;
esac

export MESA_BUILD_DIR=$MESA_BUILD_BASE_DIR/$build_dir_name

meson_args="-Dgallium-drivers=$gallium_drivers_arg -Dvulkan-drivers=$vulkan_drivers_arg -Dtools=$tools_args $extra_meson_args"

mkdir -p $MESA_BUILD_DIR

pushd $MESA_BUILD_DIR > /dev/null
meson setup $meson_args $MESA_ROOT_DIR

if [ $? -ne 0 ]; then
    meson setup --reconfigure $meson_args $MESA_ROOT_DIR

    if [ $? -ne 0 ]; then
        exit 1
    fi
fi
popd > /dev/null

export DEQP_JOBS=8

echo $MESA_BUILD_DIR
meson devenv -C $MESA_BUILD_DIR
